#ifndef TEMPERATURE_H
#define TEMPERATURE_H

#define temp_test_num 8

const short temptable[]=
{
	318,	//0
	315,	//1
	311,	//2
	308,	//3
	305,	//4
	301,	//5
	298,	//6
	295,	//7
	292,	//8
	289,	//9
	286,	//10
	283,	//11
	281,	//12
	278,	//13
	275,	//14
	273,	//15
	270,	//16
	267,	//17
	265,	//18
	262,	//19
	260,	//20
	258,	//21
	255,	//22
	253,	//23
	251,	//24
	249,	//25
	247,	//26
	245,	//27
	243,	//28
	241,	//29
	239,	//30
	237,	//31
	235,	//32
	233,	//33
	231,	//34
	229,	//35
	228,	//36
	226,	//37
	224,	//38
	223,	//39
	221,	//40
	219,	//41
	218,	//42
	216,	//43
	215,	//44
	213,	//45
	212,	//46
	211,	//47
	209,	//48
	208,	//49
	207,	//50
	205,	//51
	204,	//52
	203,	//53
	202,	//54
	201,	//55
	199,	//56
	198,	//57
	197,	//58
	196,	//59
	195,	//60
	194,	//61
	193,	//62
	192,	//63
	191,	//64
	190,	//65
	189,	//66
	188,	//67
	187,	//68
	186,	//69
	186,	//70
	185,	//71
	184,	//72
	183,	//73
	182,	//74
	181,	//75
	181,	//76
	180,	//77
	179,	//78
	178,	//79
	178,	//80
	177,	//81
	176,	//82
	176,	//83
	175,	//84
	174,	//85
	174,	//86
	173,	//87
	172,	//88
	172,	//89
	171,	//90
	171,	//91
	170,	//92
	170,	//93
	169,	//94
	168,	//95
	168,	//96
	167,	//97
	167,	//98
	166,	//99
	166,	//100
	165,	//101
	165,	//102
	164,	//103
	164,	//104
	163,	//105
	163,	//106
	162,	//107
	162,	//108
	162,	//109
	161,	//110
	161,	//111
	160,	//112
	160,	//113
	159,	//114
	159,	//115
	159,	//116
	158,	//117
	158,	//118
	157,	//119
	157,	//120
	157,	//121
	156,	//122
	156,	//123
	155,	//124
	155,	//125
	155,	//126
	154,	//127
	154,	//128
	154,	//129
	153,	//130
	153,	//131
	152,	//132
	152,	//133
	152,	//134
	151,	//135
	151,	//136
	151,	//137
	150,	//138
	150,	//139
	150,	//140
	149,	//141
	149,	//142
	149,	//143
	148,	//144
	148,	//145
	148,	//146
	147,	//147
	147,	//148
	147,	//149
	146,	//150
	146,	//151
	146,	//152
	145,	//153
	145,	//154
	145,	//155
	144,	//156
	144,	//157
	143,	//158
	143,	//159
	143,	//160
	142,	//161
	142,	//162
	142,	//163
	141,	//164
	141,	//165
	141,	//166
	140,	//167
	140,	//168
	140,	//169
	139,	//170
	139,	//171
	139,	//172
	138,	//173
	138,	//174
	138,	//175
	137,	//176
	137,	//177
	137,	//178
	136,	//179
	136,	//180
	136,	//181
	135,	//182
	135,	//183
	135,	//184
	134,	//185
	134,	//186
	134,	//187
	133,	//188
	133,	//189
	133,	//190
	132,	//191
	132,	//192
	132,	//193
	131,	//194
	131,	//195
	131,	//196
	130,	//197
	130,	//198
	130,	//199
	129,	//200
	129,	//201
	129,	//202
	128,	//203
	128,	//204
	128,	//205
	127,	//206
	127,	//207
	127,	//208
	126,	//209
	126,	//210
	126,	//211
	125,	//212
	125,	//213
	125,	//214
	124,	//215
	124,	//216
	124,	//217
	123,	//218
	123,	//219
	123,	//220
	122,	//221
	122,	//222
	122,	//223
	121,	//224
	121,	//225
	121,	//226
	120,	//227
	120,	//228
	120,	//229
	119,	//230
	119,	//231
	119,	//232
	118,	//233
	118,	//234
	118,	//235
	117,	//236
	117,	//237
	117,	//238
	116,	//239
	116,	//240
	116,	//241
	115,	//242
	115,	//243
	115,	//244
	114,	//245
	114,	//246
	114,	//247
	113,	//248
	113,	//249
	113,	//250
	112,	//251
	112,	//252
	112,	//253
	111,	//254
	111,	//255
	111,	//256
	110,	//257
	110,	//258
	110,	//259
	109,	//260
	109,	//261
	109,	//262
	109,	//263
	108,	//264
	108,	//265
	108,	//266
	107,	//267
	107,	//268
	107,	//269
	106,	//270
	106,	//271
	106,	//272
	106,	//273
	105,	//274
	105,	//275
	105,	//276
	104,	//277
	104,	//278
	104,	//279
	103,	//280
	103,	//281
	103,	//282
	103,	//283
	102,	//284
	102,	//285
	102,	//286
	101,	//287
	101,	//288
	101,	//289
	101,	//290
	100,	//291
	100,	//292
	100,	//293
	100,	//294
	99,	//295
	99,	//296
	99,	//297
	99,	//298
	98,	//299
	98,	//300
	98,	//301
	97,	//302
	97,	//303
	97,	//304
	97,	//305
	96,	//306
	96,	//307
	96,	//308
	96,	//309
	95,	//310
	95,	//311
	95,	//312
	95,	//313
	94,	//314
	94,	//315
	94,	//316
	94,	//317
	93,	//318
	93,	//319
	93,	//320
	93,	//321
	93,	//322
	92,	//323
	92,	//324
	92,	//325
	92,	//326
	91,	//327
	91,	//328
	91,	//329
	91,	//330
	90,	//331
	90,	//332
	90,	//333
	90,	//334
	89,	//335
	89,	//336
	89,	//337
	89,	//338
	89,	//339
	88,	//340
	88,	//341
	88,	//342
	88,	//343
	87,	//344
	87,	//345
	87,	//346
	87,	//347
	86,	//348
	86,	//349
	86,	//350
	86,	//351
	85,	//352
	85,	//353
	85,	//354
	85,	//355
	85,	//356
	84,	//357
	84,	//358
	84,	//359
	84,	//360
	83,	//361
	83,	//362
	83,	//363
	83,	//364
	82,	//365
	82,	//366
	82,	//367
	82,	//368
	81,	//369
	81,	//370
	81,	//371
	81,	//372
	80,	//373
	80,	//374
	80,	//375
	80,	//376
	79,	//377
	79,	//378
	79,	//379
	78,	//380
	78,	//381
	78,	//382
	78,	//383
	77,	//384
	77,	//385
	77,	//386
	76,	//387
	76,	//388
	76,	//389
	76,	//390
	75,	//391
	75,	//392
	75,	//393
	74,	//394
	74,	//395
	74,	//396
	73,	//397
	73,	//398
	73,	//399
	72,	//400
	72,	//401
	72,	//402
	71,	//403
	71,	//404
	71,	//405
	70,	//406
	70,	//407
	70,	//408
	69,	//409
	69,	//410
	69,	//411
	68,	//412
	68,	//413
	67,	//414
	67,	//415
	67,	//416
	66,	//417
	66,	//418
	66,	//419
	65,	//420
	65,	//421
	64,	//422
	64,	//423
	63,	//424
	63,	//425
	63,	//426
	62,	//427
	62,	//428
	61,	//429
	61,	//430
	60,	//431
	60,	//432
	59,	//433
	59,	//434
	58,	//435
	58,	//436
	57,	//437
	57,	//438
	56,	//439
	56,	//440
	55,	//441
	55,	//442
	54,	//443
	54,	//444
	53,	//445
	53,	//446
	52,	//447
	52,	//448
	51,	//449
	51,	//450
	50,	//451
	49,	//452
	49,	//453
	48,	//454
	48,	//455
	47,	//456
	47,	//457
	46,	//458
	45,	//459
	45,	//460
	44,	//461
	43,	//462
	43,	//463
	42,	//464
	42,	//465
	41,	//466
	40,	//467
	40,	//468
	39,	//469
	38,	//470
	38,	//471
	37,	//472
	36,	//473
	35,	//474
	35,	//475
	34,	//476
	33,	//477
	33,	//478
	32,	//479
	31,	//480
	31,	//481
	30,	//482
	29,	//483
	28,	//484
	28,	//485
	27,	//486
	26,	//487
	25,	//488
	25,	//489
	24,	//490
	23,	//491
	22,	//492
	21,	//493
	21,	//494
	20,	//495
	19,	//496
	18,	//497
	18,	//498
	17,	//499
	16,	//500
	15,	//501
	14,	//502
	14,	//503
	13,	//504
	12,	//505
	11,	//506
	10,	//507
	9,	//508
	9,	//509
	8,	//510
	7,	//511
};

unsigned int bottom_val,nozzle_val;

int Lcd_bottomtemp()
{
	unsigned int temp=0;	
	for(int a=0;a<temp_test_num;a++){
		  temp += temptable[analogRead(bottom_pin)/2];
	}
 
	bottom_val = temp/temp_test_num;  
	return bottom_val;
}
int Lcd_nozzletemp(){

	unsigned int temp=0;	
	for(int a=0;a<temp_test_num;a++){
		  temp += temptable[analogRead(nozzle_pin)/2];
	}
 
	nozzle_val = temp/temp_test_num;	
	return nozzle_val;
}

void Heat_bottomtemp(){

	if(bottom_val > bottom_temp_max )
		digitalWrite(HeatGround,LOW);
	else if(bottom_val < bottom_temp_min )
		digitalWrite(HeatGround,HIGH);
}

void Heat_nozzletemp(){

	if(nozzle_val > nozzle_temp_max)
		digitalWrite(HeatHead,LOW);
	else if( nozzle_val < nozzle_temp_min )
		digitalWrite(HeatHead,HIGH);
}

#endif


